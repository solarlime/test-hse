"use strict";(self.webpackChunktest_hse=self.webpackChunktest_hse||[]).push([[676],{8353:(t,e,r)=>{let o;r.d(e,{A:()=>s});let n={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};r(1903),r(1134),r(8845),r(7467),r(4732),r(9577),r(6573),r(8100),r(7936);let u=new Uint8Array(16);r(4114);let d=[];for(let t=0;t<256;++t)d.push((t+256).toString(16).slice(1));let s=function(t,e,r){if(n.randomUUID&&!e&&!t)return n.randomUUID();let s=(t=t||{}).random??t.rng?.()??function(){if(!o){if("undefined"==typeof crypto||!crypto.getRandomValues)throw Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");o=crypto.getRandomValues.bind(crypto)}return o(u)}();if(s.length<16)throw Error("Random bytes length must be >= 16");if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,e){if((r=r||0)<0||r+16>e.length)throw RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let t=0;t<16;++t)e[r+t]=s[t];return e}return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return(d[t[e+0]]+d[t[e+1]]+d[t[e+2]]+d[t[e+3]]+"-"+d[t[e+4]]+d[t[e+5]]+"-"+d[t[e+6]]+d[t[e+7]]+"-"+d[t[e+8]]+d[t[e+9]]+"-"+d[t[e+10]]+d[t[e+11]]+d[t[e+12]]+d[t[e+13]]+d[t[e+14]]+d[t[e+15]]).toLowerCase()}(s)}}}]);